package main

import (
	"github.com/gin-gonic/gin"
)

// 响应请求JSON JSONP(解决跨域问题) XML
//返回

type Article struct {
	Title   string `json:"title"`
	Desc    string `json:"desc"`
	Content string `json:"content"`
}

func main() {
	router := gin.Default()
	router.GET("/json", func(c *gin.Context) {
		//响应数据
		// c.String(http.StatusOK, "%v", "你好啊gin") //状态码 格式化字符串 值
		//响应JSON数据
		c.JSON(200, map[string]interface{}{ //gin.H{}
			"success": true,
			"msg":     "你好gin",
		})
	})
	router.GET("/", func(c *gin.Context) {
		//通过JSON类型响应结构体数据
		a := &Article{
			Title:   "标题",
			Desc:    "描述",
			Content: "内容",
		}
		c.JSON(200, a)
		//JSONP类型
		// c.JSONP(200, a)
		//XML
		// c.XML(200, a)
	})
	router.Run() //默认:8080
}
